package utils;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


public class DataProviderNew 
{
		private static XSSFSheet ExcelWSheet;
		private static XSSFWorkbook ExcelWBook;
		private static XSSFCell Cell;
		

	//This method is to set the File path and to open the Excel file, Pass Excel Path and Sheetname as Arguments to this method
	public static void setExcelFile(String Path,String SheetName) throws Exception {

		   try {
				// Open the Excel file
				FileInputStream ExcelFile = new FileInputStream(Path);
				// Access the required test data sheet
				ExcelWBook = new XSSFWorkbook(ExcelFile);
				ExcelWSheet = ExcelWBook.getSheet(SheetName);
				
				} 
		   catch (Exception e)
		   {
					throw (e);
		   }

		}
    
	public static  Map<String, ArrayList> getRowValues(String FilePath, String SheetName, int iTestCaseRow) throws Exception
	{
	    Map<String, ArrayList> colValues = null;
		try
		{
			FileInputStream ExcelFile = new FileInputStream(FilePath);
			   ExcelWBook = new XSSFWorkbook(ExcelFile);
			   ExcelWSheet = ExcelWBook.getSheet(SheetName);	
			   
			   int colCount = ExcelWSheet.getRow(iTestCaseRow).getLastCellNum();
			 	Row row = ExcelWSheet.getRow(iTestCaseRow);
		         
			 	
			   for(int j = 1; j < colCount ; j++)
			   {
				//  colValues = getCellData(iTestCaseRow,j);
			   }
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		return colValues;
	}
	
	
	
	public static HashMap<String, String> getTableArray(String FilePath, String SheetName, int iTestCaseRow) throws Exception
	{   
		HashMap<String, String> elements = new HashMap<String, String>();
	   try{
		   FileInputStream ExcelFile = new FileInputStream(FilePath);
		   // Access the required test data sheet
		   ExcelWBook = new XSSFWorkbook(ExcelFile);
		   ExcelWSheet = ExcelWBook.getSheet(SheetName);
//		   int startCol = 0;
//		   int totalRows = 0;
		   int ci=0, cj=0;
//		   int totalCols = 2;
//		   tabArray=new String[totalRows][totalCols];
//			   for (int j=startCol;j <= totalCols ;j++, cj++)
//			   {
//				    tabArray[ci][cj] =getCellData(iTestCaseRow,j);
//				   System.out.println(tabArray[ci][cj]);
//			   }
		   
		   int colCount = ExcelWSheet.getRow(iTestCaseRow).getLastCellNum();
		   System.out.println("Number Of Columns is"+ colCount);
		   for(int j = 1; j < colCount ; j++)
		   {		
			    String key = getCellData(0,j);	
			    String value = getCellData(iTestCaseRow,j);			   
			    //tabArray[ci][cj]			   
			    elements.put(key,value);
			   //cj++;	
		   }
		   System.out.println("elements : " + elements);
		   
		}
		catch (FileNotFoundException e)
		{
			System.out.println("Could not read the Excel sheet");
			e.printStackTrace();
		}
		catch (IOException e)
		{
			System.out.println("Could not read the Excel sheet");
			e.printStackTrace();
		}
	   return(elements);
	}

	//This method is to read the test data from the Excel cell, in this we are passing parameters as Row num and Col num
	public static String getCellData(int RowNum, int ColNum) throws Exception
	{
	   String cellData;
		try{
		   
		  cellData = ExcelWSheet.getRow(RowNum).getCell(ColNum).getStringCellValue();
		  System.out.println("Cell data is"+cellData); 		   
		  
		  }	   
	        catch (Exception e)
	        {
	        	double CellData2 = ExcelWSheet.getRow(RowNum).getCell(ColNum).getNumericCellValue();
	        cellData = Double.toString(CellData2);
	        System.out.println("Cell data is"+cellData); 		   			  
	        	
			}
	return cellData;
	 }

//	public static String getTestCaseName(String sTestCase)throws Exception
//	{
//		String value = sTestCase;
//		try
//		{
//			int posi = value.indexOf("@");
//			value = value.substring(0, posi);
//			posi = value.lastIndexOf(".");	
//			value = value.substring(posi + 1);
//			return value;
//		}
//		catch (Exception e)
//		{
//			throw (e);
//		}
//	}

	public static int getRowContains(String sTestCaseName, int colNum) throws Exception
	{
		int i;
		try 
		{
			int rowCount = getRowUsed();
			for ( i=0 ; i<rowCount; i++)
			{
				if  (getCellData(i,colNum).equalsIgnoreCase(sTestCaseName))
				{
					break;
				}
			}
			return i;
		}
		catch (Exception e)
		  {
			throw(e);
		  }
		}

	public static int getRowUsed() throws Exception 
	{
		try
			{
				int RowCount = ExcelWSheet.getLastRowNum();	
				return RowCount;
			}
		  catch (Exception e)
		    {
				System.out.println(e.getMessage());
				throw (e);
			}		
	}
	
	
	
	
}
	
	
